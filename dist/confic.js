"use strict";function getType(e){return Object.prototype.toString.call(e).slice(8,-1)}function isPlainObject(e){return"Object"===getType(e)&&(e.constructor===Object&&Object.getPrototypeOf(e)===Object.prototype)}function isNumber(e){return"Number"===getType(e)&&!isNaN(e)}function getParts(e){return e.match(/^[a-z]+|[A-Z][a-z]+|[A-Z]+|[a-z]+/g)}function constantCase(e){return getParts(e).join("_").toUpperCase()}const shallowClone=e=>Object.create(Object.getPrototypeOf(e),Object.getOwnPropertyDescriptors(e)),confic=(e,{inspect:t,parentTree:n}={})=>{const r=shallowClone(e);Object.keys(r).forEach(e=>{const t=n?`${n}.${e}`:e,o=constantCase(t),c=process.env[o];if(c){const t=isNumber(r[e])?Number(c):c;Object.defineProperty(r,e,{value:t})}else{if(null===r[e])throw new Error(`Required key ${o} not found in environment.`);isPlainObject(r[e])&&(r[e]=confic(r[e],{parentTree:t}))}});const o=Object.freeze(r);return t&&console.log(o),o};module.exports=confic;
