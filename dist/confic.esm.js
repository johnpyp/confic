function e(e){return Object.prototype.toString.call(e).slice(8,-1)}const t=(r,{inspect:n,parentTree:o}={})=>{const c=(e=>Object.create(Object.getPrototypeOf(e),Object.getOwnPropertyDescriptors(e)))(r);Object.keys(c).forEach(r=>{const n=o?`${o}.${r}`:r,u=function(e){return function(e){return e.match(/^[a-z]+|[A-Z][a-z]+|[A-Z]+|[a-z]+/g)}(e).join("_").toUpperCase()}(n),i=process.env[u];if(i){const t=function(t){return"Number"===e(t)&&!isNaN(t)}(c[r])?Number(i):i;Object.defineProperty(c,r,{value:t})}else{if(null===c[r])throw new Error(`Required key ${u} not found in environment.`);(function(t){return"Object"===e(t)&&(t.constructor===Object&&Object.getPrototypeOf(t)===Object.prototype)})(c[r])&&(c[r]=t(c[r],{parentTree:n}))}});const u=Object.freeze(c);return n&&console.log(u),u};export default t;
